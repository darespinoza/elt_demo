FROM python:3.12-slim

# Create DAGSTER_HOME and APP code directory
RUN mkdir -p /opt/dagster/dagster_home /opt/dagster/app
# Set work directory
WORKDIR /opt/dagster/app
# Copy dagster.yaml file to DAGSTER_HOME
COPY dagster.yaml /opt/dagster/dagster_home

# Create dbt profiles.yml directory
RUN mkdir -p /root/.dbt
# Copy dbt profiles.yml
COPY profiles.yml /root/.dbt/

# Prepare Python
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    gcc \
    libpq-dev \
    python3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
RUN pip3 install --upgrade pip setuptools wheel

# Set environment variables for OBDC SQL Server
ENV ACCEPT_EULA=Y
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies for OBDC SQL Server
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    unixodbc \
    unixodbc-dev \
    build-essential \
    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update \
    && apt-get install -y msodbcsql17 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy project code and workspace to /opt/dagster/app
COPY . /opt/dagster/app/

# Install Dagster project dependencies
RUN pip install -e ".[dev]"

# Set Dagster environment variables
# ENV DAGSTER_HOME=/opt/dagster/dagster_home/
# ENV DAGSTER_DBT_PARSE_PROJECT_ON_LOAD=1

EXPOSE 3000

ENTRYPOINT [ "dagster", "dev", "-h", "0.0.0.0", "-p", "3000" ]
