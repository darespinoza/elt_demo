version: "3.9"
# DAGSTER PROJECT
services:
  dagster_elt:
    restart: always
    container_name: dagster_elt_demo
    environment:
      # Set Dagster environment variables
      - DAGSTER_HOME=${DAGSTER_HOME}
      - DAGSTER_DBT_PARSE_PROJECT_ON_LOAD=${DAGSTER_DBT_PARSE_PROJECT_ON_LOAD}
      # Set MSSQL SOURCE environment variables
      - MSSQL_USER=${MSSQL_USER}
      - MSSQL_PASSWORD=${MSSQL_PASSWORD}
      - MSSQL_DATABASE=${MSSQL_DATABASE}
      - MSSQL_SCHEMA=${MSSQL_SCHEMA}
      - MSSQL_HOST=${MSSQL_HOST}
      - MSSQL_DRIVER=${MSSQL_DRIVER}
      # Set Postgres TARGET environment variables
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - PG_SCHEMA=${PG_SCHEMA}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
    build:
      context: .
      dockerfile: ./Dockerfile_Dagster
    ports:
      - 4000:3000
    volumes:
      - .:/opt/dagster/app
    networks:
      - elt_network

  # SQLSERVER
  sqlserver_source:
    image: mcr.microsoft.com/mssql/server:2017-latest
    restart: always
    container_name: sqlserver_source
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - MSSQL_SA_PASSWORD=${MSSQL_PASSWORD}
    ports:
      - "1434:1433"
    volumes:
      - mssql_data:/var/opt/mssql/data
    networks:
      - elt_network

  # POSTGRESQL
  postgres_target:
    image: postgres:11
    restart: always
    shm_size: 128mb
    container_name: postgres_target
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/data:/var/lib/postgresql/data
    networks:
      - elt_network

volumes:
  mssql_data:
  pg_data:

networks:
  elt_network:
    driver: bridge
